{"version":3,"sources":["tps-transition-slide.min.js"],"names":["tps","transitions","slide","me","previousIndex","newIndex","$","jQuery","transitionDirection","options","width","slideContainer","innerWidth","direction","animationsQueue","previousSlide","slides","content","css","innerHeight","push","animateOptions","animate","transitionSpeed","this","detach","decrementSemaphore","append","onNewSlide","height"],"mappings":"AAGA,IAAIA,IAAMA,KAAO,GACjBA,IAAIC,YAAcD,IAAIC,aAAe,GACrCD,IAAIC,YAAYC,MAAQ,SAAUC,EAAIC,EAAeC,GACjD,IAAIC,EAAIC,OAIJC,EADQL,EAAGM,QAAe,MACI,QAAU,OAGxCC,EAAQP,EAAGQ,eAAeC,aAE1BC,EAAmB,EADZR,EAAWD,EACK,GAAK,EAG5BU,EAAkB,GAGlBC,EAAkC,OAAlBX,EAAyBE,EAAEH,EAAGa,OAAOZ,GAAea,SAAW,KAC/EF,IACAZ,EAAGQ,eAAeO,IAAI,SAAUH,EAAcI,eAC9CL,EAAgBM,KAAK,WACjB,IAOmEjB,EAP/DkB,EAAiB,GACrBA,EAAeb,IAAwBK,EAAYH,EAEnDK,EACKG,IAAI,QAASR,GACbQ,IAAI,WAAY,YAChBA,IAAIV,EAAqB,GACzBc,QAAQD,EAAgBlB,EAAGM,QAAQc,iBAA2BpB,EAQ7DA,EAPS,WACHG,EAAEkB,MACGC,SACAP,IAAI,WAAY,IAChBA,IAAIV,EAAqB,IAC9BL,EAAGuB,2BAMvB,IAAIxB,EAAQC,EAAGa,OAAOX,GAAUY,QAiDhC,OA/CqB,MAAjBF,EAEAZ,EAAGQ,eAAegB,OAAOzB,IAGzBA,EAAMgB,IAAI,QAASR,GACnBR,EAAMgB,IAAI,aAAc,UACxBf,EAAGQ,eAAegB,OAAOzB,GAGzBC,EAAGyB,aAGHd,EAAgBM,KAAK,WAGc,IAAUjB,EAFzCA,EAAGQ,eAAeW,QAAQ,CACtBO,OAAU3B,EAAMiB,eACjBhB,EAAGM,QAAQc,iBAA2BpB,EAMvCA,EALS,WACHG,EAAEkB,MACGN,IAAI,WAAY,IACrBf,EAAGuB,0BAMfZ,EAAgBM,KAAK,WACjB,IAQ8DjB,EAR1DkB,EAAiB,GACrBA,EAAeb,GAAuB,IAEtCN,EACKgB,IAAIV,EAAqBK,EAAYH,GACrCQ,IAAI,WAAY,YAChBA,IAAI,aAAc,WAClBI,QACGD,EAAgBlB,EAAGM,QAAQc,iBAA2BpB,EAQxDA,EAPS,WACHG,EAAEkB,MACGN,IAAI,WAAY,IAChBA,IAAI,QAAS,IAClBf,EAAGQ,eAAeO,IAAI,SAAU,IAChCf,EAAGuB,2BAMhBZ","file":"../tps-transition-slide.min.js","sourcesContent":["/*\n * Copyright 2012-2020, Theia Post Slider, WeCodePixels, https://wecodepixels.com\n */\nvar tps = tps || {};\ntps.transitions = tps.transitions || {};\ntps.transitions.slide = function (me, previousIndex, newIndex) {\n    var $ = jQuery;\n\n    // Check for RTL layout.\n    var isRtl = me.options['isRtl'];\n    var transitionDirection = isRtl ? 'right' : 'left';\n\n    // Init\n    var width = me.slideContainer.innerWidth();\n    var diff = newIndex - previousIndex;\n    var direction = diff > 0 ? 1 : -1;\n\n    // Start all animations at once, at the end of this function. Otherwise we can get rare race conditions.\n    var animationsQueue = [];\n\n    // Remove previous slide.\n    var previousSlide = previousIndex !== null ? $(me.slides[previousIndex].content) : null;\n    if (previousSlide) {\n        me.slideContainer.css('height', previousSlide.innerHeight());\n        animationsQueue.push(function () {\n            var animateOptions = {};\n            animateOptions[transitionDirection] = -direction * width;\n\n            previousSlide\n                .css('width', width)\n                .css('position', 'absolute')\n                .css(transitionDirection, 0)\n                .animate(animateOptions, me.options.transitionSpeed, function (me, previousIndex) {\n                    return function () {\n                        $(this)\n                            .detach()\n                            .css('position', '')\n                            .css(transitionDirection, '');\n                        me.decrementSemaphore();\n                    }\n                }(me, previousIndex));\n        });\n    }\n\n    var slide = me.slides[newIndex].content;\n\n    if (previousSlide == null) {\n        // Don't animate the first shown slide.\n        me.slideContainer.append(slide);\n    }\n    else {\n        slide.css('width', width);\n        slide.css('visibility', 'hidden');\n        me.slideContainer.append(slide);\n\n        // Call event handlers.\n        me.onNewSlide();\n\n        // Animate the height.\n        animationsQueue.push(function () {\n            me.slideContainer.animate({\n                'height': slide.innerHeight()\n            }, me.options.transitionSpeed, function (me) {\n                return function () {\n                    $(this)\n                        .css('position', '');\n                    me.decrementSemaphore();\n                }\n            }(me));\n        });\n\n        // Animate the new slide.\n        animationsQueue.push(function () {\n            var animateOptions = {};\n            animateOptions[transitionDirection] = '0';\n\n            slide\n                .css(transitionDirection, direction * width)\n                .css('position', 'absolute')\n                .css('visibility', 'visible')\n                .animate(\n                    animateOptions, me.options.transitionSpeed, function (me) {\n                    return function () {\n                        $(this)\n                            .css('position', '')\n                            .css('width', '');\n                        me.slideContainer.css('height', '');\n                        me.decrementSemaphore();\n                    }\n                }(me));\n        });\n    }\n\n    return animationsQueue;\n};\n"]}